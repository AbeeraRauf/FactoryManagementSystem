# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'expense.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import pandas as pd
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QDate
import openpyxl
from openpyxl import load_workbook
from pandas import Series, DataFrame
import matplotlib.pyplot as plt
from PIL import Image, ImageTk
from datetime import datetime
from openpyxl.workbook import Workbook
from datetime import date
import datetime


import sys
from math import ceil
import pandas as pd
from PyQt5.QtGui import QDoubleValidator, QValidator
import re
from PyQt5.QtWidgets import QWidget, QTableWidgetItem, QTableWidget, QMessageBox
from PyQt5.QtGui import QDoubleValidator, QValidator
from PyQt5.uic import loadUi

import pandas as pd 
expense = pd.read_excel('BookExpense.xlsx', index_col=None, usecols=['DATE', 'DETAILS', 'TOTAL'],sheet_name='expense_details')
expense['TOTAL']=expense['TOTAL'].astype(int)
 
class expenses_form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.setFixedSize(1067, 773)
        self.submit_btn = QtWidgets.QPushButton(Form)
        self.submit_btn.setGeometry(QtCore.QRect(160, 690, 131, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.submit_btn.setFont(font)
        self.submit_btn.setStyleSheet("background-color:rgb(0, 0, 81) ;\n"
"color:rgb(255,255, 255) ;")
        self.submit_btn.setObjectName("submit_btn")
        
        self.item_label_40 = QtWidgets.QLabel(Form)
        self.item_label_40.setObjectName(u"item_label")
        self.item_label_40.setGeometry(QtCore.QRect(330,690,151,41))
        font14 = QtGui.QFont()
        font14.setFamily(u"MS Shell Dlg 2")
        font14.setPointSize(12)
        font14.setBold(True)
        font14.setWeight(75)
        self.item_label_40.setFont(font14)
        self.item_label_40.setTextFormat(QtCore.Qt.RichText)
        self.item_label_40.setAlignment(QtCore.Qt.AlignCenter)
        self.item_label_40.setWordWrap(True)
        self.item_label_40.setText("Total Expense:")
        
        self.expenseval = QtWidgets.QTextEdit(Form)
        self.expenseval.setObjectName(u"exp")
        self.expenseval.setGeometry(QtCore.QRect(490, 690, 131,41))
        self.expenseval.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.textBrowser = QtWidgets.QTextBrowser(Form)
        self.textBrowser.setEnabled(False)
        self.textBrowser.setGeometry(QtCore.QRect(0, 10, 1071, 75))
        self.textBrowser.setStyleSheet("background-color:rgb(0, 0, 81) ;\n"
"gridline-color: rgb(0, 0, 127);\n"
"color:rgb(255,255, 255) ;")
     
         
        self.del_entry_btn = QtWidgets.QPushButton(Form)
        self.del_entry_btn.setGeometry(QtCore.QRect(20, 690,131, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.del_entry_btn.setFont(font)
        self.del_entry_btn.setStyleSheet("background-color:rgb(0, 0, 81) ;\n"
"color:rgb(255,255, 255) ;")
        self.del_entry_btn.setObjectName("del_entry_btn")
        '''self.groupBox = QtWidgets.QGroupBox(Form)
        self.groupBox.setGeometry(QtCore.QRect(10, 80, 291, 51))
        self.groupBox.setTitle("")
        self.groupBox.setObjectName("groupBox")'''
        self.item_label_6 = QtWidgets.QLabel(Form)
        self.item_label_6.setGeometry(QtCore.QRect(70, 110,61, 51))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.item_label_6.setFont(font)
        self.item_label_6.setTextFormat(QtCore.Qt.RichText)
        self.item_label_6.setAlignment(QtCore.Qt.AlignCenter)
        self.item_label_6.setWordWrap(True)
        self.item_label_6.setObjectName("item_label_6")
        self.dateTimeEdit = QtWidgets.QDateTimeEdit(Form)
        self.dateTimeEdit.setGeometry(QtCore.QRect(140, 120, 181, 31))
        self.dateTimeEdit.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.dateTimeEdit.setInputMethodHints(QtCore.Qt.ImhDate|QtCore.Qt.ImhPreferNumbers)
        self.dateTimeEdit.setDateTime(QtCore.QDateTime.currentDateTime())  
        self.dateTimeEdit.setObjectName("dateTimeEdit")
        self.show_btn = QtWidgets.QPushButton(Form)
        self.show_btn.setGeometry(QtCore.QRect(50, 170, 131, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.show_btn.setFont(font)
        self.show_btn.setStyleSheet("background-color:rgb(0, 0, 81) ;\n"
"color:rgb(255,255, 255) ;")
        self.show_btn.setObjectName("show_btn")
        self.clear_btn = QtWidgets.QPushButton(Form)
        self.clear_btn.setGeometry(QtCore.QRect(200, 170, 131, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.clear_btn.setFont(font)
        self.clear_btn.setStyleSheet("background-color:rgb(0, 0, 81) ;\n"
"color:rgb(255,255, 255) ;")
        self.clear_btn.setObjectName("clear_btn")
        self.detailcontainer = QtWidgets.QGroupBox(Form)
        self.detailcontainer.setGeometry(QtCore.QRect(660, 280, 401, 241))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.detailcontainer.setFont(font)
        self.detailcontainer.setStyleSheet("background-color: rgb(126, 255, 247);\n"
"color:rgb(0,0,81) ;")
        self.detailcontainer.setObjectName("detailcontainer")
        self.add_btn = QtWidgets.QPushButton(self.detailcontainer)
        self.add_btn.setGeometry(QtCore.QRect(140, 160, 131, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        font.setKerning(False)
        self.add_btn.setFont(font)
        self.add_btn.setStyleSheet("background-color:rgb(0, 0, 81) ;\n"
"color:rgb(255,255, 255) ;")
        self.add_btn.setObjectName("add_btn")
        self.rs_field = QtWidgets.QTextEdit(self.detailcontainer)
        self.rs_field.setGeometry(QtCore.QRect(110, 100, 271, 41))
        self.rs_field.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.rs_field.setObjectName("rs_field")
        self.item_label_38 = QtWidgets.QLabel(self.detailcontainer)
        self.item_label_38.setGeometry(QtCore.QRect(20, 100, 81, 41))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.item_label_38.setFont(font)
        self.item_label_38.setTextFormat(QtCore.Qt.RichText)
        self.item_label_38.setAlignment(QtCore.Qt.AlignCenter)
        self.item_label_38.setWordWrap(True)
        self.item_label_38.setObjectName("item_label_38")
        self.detail_field = QtWidgets.QTextEdit(self.detailcontainer)
        self.detail_field.setGeometry(QtCore.QRect(110, 40, 271, 41))
        self.detail_field.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.detail_field.setObjectName("detail_field")
        self.item_label_39 = QtWidgets.QLabel(self.detailcontainer)
        self.item_label_39.setGeometry(QtCore.QRect(20,40,81,41))
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.item_label_39.setFont(font)
        self.item_label_39.setTextFormat(QtCore.Qt.RichText)
        self.item_label_39.setAlignment(QtCore.Qt.AlignCenter)
        self.item_label_39.setWordWrap(True)
        self.item_label_39.setObjectName("item_label_39")
        self.tableView = QtWidgets.QTableWidget(Form)
        self.tableView.setGeometry(QtCore.QRect(10, 240, 621, 431))
        font = QtGui.QFont()
        font.setFamily("Nirmala UI")
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.tableView.setFont(font)
        self.tableView.setStyleSheet("font: 12pt \"Nirmala UI\";")
        self.tableView.setObjectName("tableView")
        self.tableView.setColumnCount(3)
        self.tableView.setRowCount(0) 
        header = self.tableView.horizontalHeader()      
        header.setFont(font)
        self.tableView.setHorizontalHeaderLabels(('Date','Details','Price'))  # set header text
        #header.setSectionResizeMode(0, QtWidgets.QHeaderView.Stretch)
        header.setSectionResizeMode(1, QtWidgets.QHeaderView.Stretch)
        #header.setSectionResizeMode(2, QtWidgets.QHeaderView.Stretch)
        self.tableView.setEditTriggers(QtWidgets.QTableWidget.NoEditTriggers)
        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.submit_btn.setText(_translate("Form", "Submit"))
        self.show_btn.setText(_translate("Form", "Show"))
        self.clear_btn.setText(_translate("Form", "Clear"))
        self.textBrowser.setHtml(_translate("Form", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:7.8pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:24pt; font-weight:600;\">  Ahmed Corrugation Machines</span></p></body></html>"))
        self.del_entry_btn.setText(_translate("Form", "Delete"))
        self.item_label_6.setText(_translate("Form", "Date:"))
        self.dateTimeEdit.setDisplayFormat(_translate("Form", "dd-MM-yyyy"))
        self.detailcontainer.setTitle(_translate("Form", "Expense Detail"))
        self.add_btn.setText(_translate("Form", "Add"))
        self.item_label_38.setText(_translate("Form", "Rupees:"))
        self.item_label_39.setText(_translate("Form", "Details:"))
        self.expenseval.setText("0")
        
        def reset_all():
            self.expenseval.setText("0")
            self.tableView.setRowCount(0)
            self.detail_field.setText("")
            self.rs_field.setText("")
            self.dateTimeEdit.setDateTime(QtCore.QDateTime.currentDateTime())  
            updated_expense()

        def updated_expense():

            totalrows = self.tableView.rowCount()
       
            updated = 0

            if totalrows != 0:
                for i in range(0, totalrows):
                    updated += (float(self.tableView.item(i, 2).text()))

            self.expenseval.setText(str(round(updated)))
        def add_click():
            errors = []
            import re
            if not (bool(re.match('^\d+?\.\d+?|\d+$', self.rs_field.toPlainText().strip()))):
                errors.append("wrong input in rupees text field")

            if (len(errors) == 0):
                
                
                detail=self.detail_field.toPlainText().strip()
                details=re.sub(' {2,}', ' ',detail)
                rs=self.rs_field.toPlainText().strip()

                dates= (self.dateTimeEdit.date().toPyDate().strftime("%d-%m-%y")) 
                 
                rowPosition = self.tableView.rowCount()
                self.tableView.insertRow(rowPosition)
                self.tableView.setItem(rowPosition, 0, QtWidgets.QTableWidgetItem( (dates)))
                self.tableView.setItem(rowPosition, 1, QtWidgets.QTableWidgetItem(details))
                self.tableView.setItem(rowPosition, 2, QtWidgets.QTableWidgetItem(rs))
                
                self.detail_field.setText("")
                self.rs_field.setText("")
                updated_expense()
            else:

                msg = QMessageBox()  # create an instance of it
                msg.setIcon(QMessageBox.Information)  # set icon
                msgs = " , ".join([str(item) for item in errors])
                msg.setText(msgs)  # set text

                msg.setWindowTitle("Alert")  # set title
                message = msg.exec_()
            
        def write_excel(df, sheets, excel_path):
                book=openpyxl.load_workbook(excel_path )
                writer = pd.ExcelWriter(excel_path, engine='openpyxl',mode="a",if_sheet_exists="replace")
                writer.book = book
                writer.sheets = {ws.title:ws for ws in book.worksheets}
                result=pd.DataFrame()
                result = df
                result.to_excel(writer,sheet_name=sheets, index=False)
                writer.save()

        def setExpense( ):
                global expense
                number_of_rows = self.tableView.rowCount()
                number_of_columns = self.tableView.columnCount()
                lis=[]
                slis=[]
                for i in range(number_of_rows):
                    lis=[]
                    for j in range(number_of_columns):
                        lis.append(str(self.tableView.item(i, j).text()) +' ')
                    slis.append(lis)
                df= pd.DataFrame(slis, columns =['DATE', 'DETAILS', 'TOTAL'])
                        
                expense=(pd.concat([expense,df], ignore_index=True ))
              
               
                expense.drop_duplicates(subset='DETAILS',inplace=True)
                expense.reset_index(drop=True,inplace=True) 
              
                expense['TOTAL']=expense['TOTAL'].astype(int)
                expense.DATE= pd.to_datetime(expense['DATE'])
                expense['DATE'] = expense['DATE'].dt.strftime("%d-%m-%y")
                lis=[]
                lis=expense["DATE"].unique().tolist()
                for i in lis:
                    string1=[]
                    addup=0
                    for index,rows  in expense.iterrows():
                        if (str(rows[0])==str(i)):    
                            string1.append (str(rows[1])  )
                            addup+=int(rows[2])
                    strings=(' || ').join(string1)
                    expense.drop(expense.index[expense['DATE'] == i], inplace=True)
                    new_row = {'DATE':i, 'DETAILS':strings, 'TOTAL':addup }
                    expense= expense.append(new_row, ignore_index=True)

                 
                 
                write_excel(expense, "expense_details",r'BookExpense.xlsx')
            
                reset_all()


        def del_entry():
            try:
                    current_row = self.tableView.currentRow()
                    current_column = self.tableView.currentColumn()
                    cell_value = self.tableView.item(current_row, current_column).text()  
                    self.tableView.removeRow(self.tableView.currentRow())
                    updated_expense()
            except:
                pass
            
        def showrec():
            
            self.tableView.clear()
            self.tableView.setObjectName("tableView")
            self.tableView.setColumnCount(3)
            self.tableView.setRowCount(0)  
            self.add_btn.setEnabled(False)
            self.submit_btn.setEnabled(False)
            expense = pd.read_excel('BookExpense.xlsx', index_col=None, usecols=['DATE', 'DETAILS', 'TOTAL'],sheet_name='expense_details')
            
            expense['TOTAL']=expense['TOTAL'].astype(int)
            expense['DATE']= pd.to_datetime(expense['DATE'])
            expense['DATE'] = expense['DATE'].dt.strftime("%d-%m-%y")
            expense=expense[   expense['DATE']  == self.dateTimeEdit.date().toPyDate().strftime('%d-%m-%y') ]
            font= QtGui.QFont()
            font.setPointSize(12)
            font.setBold(True)
            font.setWeight(75)
            self.tableView.setHorizontalHeaderLabels(('Date','Details','Price'))  # set header text  
            header = self.tableView.horizontalHeader()  
                
             
            header.setSectionResizeMode(1, QtWidgets.QHeaderView.Stretch)
           
            header.setFont(font) 
            self.tableView.setEditTriggers(QtWidgets.QTableWidget.NoEditTriggers) 
            rowPosition =0
            expense=expense.sort_values('DATE')
            for row in expense.iterrows():
                    self.tableView.insertRow(rowPosition)
                    x=pd.to_datetime(str(row[1][0]) )
                    y=(x.strftime("%d-%m-%y") )
                    self.tableView.setItem(rowPosition, 0, QtWidgets.QTableWidgetItem(y))
                    self.tableView.setItem(rowPosition, 1, QtWidgets.QTableWidgetItem(str(row[1][1])))
                    self.tableView.setItem(rowPosition, 2, QtWidgets.QTableWidgetItem(str(row[1][2]))) 
                    rowPosition+=1 
                    
            updated_expense()
                
                    
                    
        def clearrec():
             reset_all()
             self.add_btn.setEnabled(True)
             self.submit_btn.setEnabled(True)
            
        self.show_btn.clicked.connect(showrec)    
        self.clear_btn.clicked.connect(clearrec)    
        self.add_btn.clicked.connect(add_click)
        self.submit_btn.clicked.connect(setExpense)
        self.del_entry_btn.clicked.connect(del_entry)
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = expenses_form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
